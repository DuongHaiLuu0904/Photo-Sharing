# Default ignored files
/shelf/
/workspace.xml
# Editor-based HTTP Client requests
/httpRequests/

# async function updateUser(userData) {
#     try {
#         const response = await fetch(`${API_BASE_URL}/user/${userData._id}`, {
#             method: 'PATCH',
#             credentials: 'include',
#             headers: {
#                 'Content-Type': 'application/json',
#             },
#             body: JSON.stringify(userData)
#         });

#         const data = await response.json();

#         if (!response.ok) {
#             throw new Error(data.error || `HTTP error! status: ${response.status}`);
#         }
#         return data;
#     } catch (error) {
#         console.error('Update user failed:', error);
#         throw error;
#     }
# }

# async function deletePhoto(photoId) {
#     try {
#         const response = await fetch(`${API_BASE_URL}/photo/delete/${photoId}`, {
#             method: 'DELETE',
#             credentials: 'include'
#         });

#         if (!response.ok) {
#             throw new Error(`HTTP error! status: ${response.status}`);
#         }

#         return true;
#     } catch (error) {
#         console.error('Delete photo failed:', error);
#         throw error;
#     }
# }

# async function deleteComment(photoId, commentId) {
#     try {
#         const response = await fetch(`${API_BASE_URL}/photo/deleteComment/${photoId}/${commentId}`, {
#             method: 'DELETE',
#             credentials: 'include'
#         });

#         if (!response.ok) {
#             throw new Error(`HTTP error! status: ${response.status}`);
#         }

#         return true;
#     } catch (error) {
#         console.error('Delete comment failed:', error);
#         throw error;
#     }
# }

# async function updateLike(photoId) {
#     try {
#         const response = await fetch(`${API_BASE_URL}/photo/like/${photoId}`, {
#             method: 'PATCH',
#             credentials: 'include',
#             headers: {
#                 'Content-Type': 'application/json',
#             }
#         });

#         if (!response.ok) {
#             throw new Error(`HTTP error! status: ${response.status}`);
#         }

#         // Trả về dữ liệu mới từ server (like, dislike, userLiked, userDisliked)
#         return await response.json();
#     } catch (error) {
#         console.error('Update like failed:', error);
#         throw error;
#     }
# }

# async function updateDislike(photoId) {
#     try {
#         const response = await fetch(`${API_BASE_URL}/photo/dislike/${photoId}`, {
#             method: 'PATCH',
#             credentials: 'include',
#             headers: {
#                 'Content-Type': 'application/json',
#             }
#         });

#         if (!response.ok) {
#             throw new Error(`HTTP error! status: ${response.status}`);
#         }

#         // Trả về dữ liệu mới từ server (like, dislike, userLiked, userDisliked)
#         return await response.json();
#     } catch (error) {
#         console.error('Update dislike failed:', error);
#         throw error;
#     }
# }